'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _runtime = require('handlebars/runtime');

var _runtime2 = _interopRequireDefault(_runtime);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

require('../handlebars_helpers');

var _html_formatter = require('./html_formatter');

var _html_formatter2 = _interopRequireDefault(_html_formatter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var template = _runtime2.default.template({
  "1": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return ((stack1 = lookupProperty(helpers, "if").call(alias1, depth0 != null ? lookupProperty(depth0, "title") : depth0, {
      "name": "if",
      "hash": {},
      "fn": container.program(2, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 3,
          "column": 2
        },
        "end": {
          "line": 5,
          "column": 11
        }
      }
    })) != null ? stack1 : "") + ((stack1 = lookupProperty(helpers, "if").call(alias1, depth0 != null ? lookupProperty(depth0, "subtitle") : depth0, {
      "name": "if",
      "hash": {},
      "fn": container.program(4, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 7,
          "column": 2
        },
        "end": {
          "line": 9,
          "column": 11
        }
      }
    })) != null ? stack1 : "") + "<div class=\"chord-sheet\">" + ((stack1 = lookupProperty(helpers, "each").call(alias1, depth0 != null ? lookupProperty(depth0, "paragraphs") : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(6, data, 1, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 12,
          "column": 4
        },
        "end": {
          "line": 32,
          "column": 15
        }
      }
    })) != null ? stack1 : "") + "</div>";
  },
  "2": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<h1>" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "title") || (depth0 != null ? lookupProperty(depth0, "title") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "title",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 4,
          "column": 8
        },
        "end": {
          "line": 4,
          "column": 19
        }
      }
    }) : helper)) + "</h1>";
  },
  "4": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<h2>" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "subtitle") || (depth0 != null ? lookupProperty(depth0, "subtitle") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "subtitle",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 8,
          "column": 8
        },
        "end": {
          "line": 8,
          "column": 22
        }
      }
    }) : helper)) + "</h2>";
  },
  "6": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<div class=\"" + container.escapeExpression((lookupProperty(helpers, "paragraphClasses") || depth0 && lookupProperty(depth0, "paragraphClasses") || container.hooks.helperMissing).call(alias1, blockParams[0][0], {
      "name": "paragraphClasses",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 13,
          "column": 18
        },
        "end": {
          "line": 13,
          "column": 48
        }
      }
    })) + "\">" + ((stack1 = lookupProperty(helpers, "each").call(alias1, depth0 != null ? lookupProperty(depth0, "lines") : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(7, data, 1, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 14,
          "column": 8
        },
        "end": {
          "line": 30,
          "column": 19
        }
      }
    })) != null ? stack1 : "") + "</div>";
  },
  "7": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return (stack1 = lookupProperty(helpers, "if").call(alias1, (lookupProperty(helpers, "shouldRenderLine") || depth0 && lookupProperty(depth0, "shouldRenderLine") || container.hooks.helperMissing).call(alias1, blockParams[0][0], {
      "name": "shouldRenderLine",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 15,
          "column": 17
        },
        "end": {
          "line": 15,
          "column": 40
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(8, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 15,
          "column": 10
        },
        "end": {
          "line": 29,
          "column": 19
        }
      }
    })) != null ? stack1 : "";
  },
  "8": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<div class=\"" + container.escapeExpression((lookupProperty(helpers, "lineClasses") || depth0 && lookupProperty(depth0, "lineClasses") || container.hooks.helperMissing).call(alias1, blockParams[1][0], {
      "name": "lineClasses",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 16,
          "column": 24
        },
        "end": {
          "line": 16,
          "column": 44
        }
      }
    })) + "\">" + ((stack1 = lookupProperty(helpers, "each").call(alias1, depth0 != null ? lookupProperty(depth0, "items") : depth0, {
      "name": "each",
      "hash": {},
      "fn": container.program(9, data, 1, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 17,
          "column": 14
        },
        "end": {
          "line": 27,
          "column": 25
        }
      }
    })) != null ? stack1 : "") + "</div>";
  },
  "9": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        alias2 = container.hooks.helperMissing,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return ((stack1 = lookupProperty(helpers, "if").call(alias1, (lookupProperty(helpers, "isChordLyricsPair") || depth0 && lookupProperty(depth0, "isChordLyricsPair") || alias2).call(alias1, blockParams[0][0], {
      "name": "isChordLyricsPair",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 18,
          "column": 23
        },
        "end": {
          "line": 18,
          "column": 47
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(10, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 18,
          "column": 16
        },
        "end": {
          "line": 20,
          "column": 25
        }
      }
    })) != null ? stack1 : "") + ((stack1 = lookupProperty(helpers, "if").call(alias1, (lookupProperty(helpers, "isTag") || depth0 && lookupProperty(depth0, "isTag") || alias2).call(alias1, blockParams[0][0], {
      "name": "isTag",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 22,
          "column": 23
        },
        "end": {
          "line": 22,
          "column": 35
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(12, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 22,
          "column": 16
        },
        "end": {
          "line": 26,
          "column": 25
        }
      }
    })) != null ? stack1 : "");
  },
  "10": function _(container, depth0, helpers, partials, data) {
    var helper,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        alias2 = container.hooks.helperMissing,
        alias3 = "function",
        alias4 = container.escapeExpression,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<div class=\"column\"><div class=\"chord\">" + alias4((helper = (helper = lookupProperty(helpers, "chords") || (depth0 != null ? lookupProperty(depth0, "chords") : depth0)) != null ? helper : alias2, (typeof helper === 'undefined' ? 'undefined' : _typeof(helper)) === alias3 ? helper.call(alias1, {
      "name": "chords",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 19,
          "column": 57
        },
        "end": {
          "line": 19,
          "column": 67
        }
      }
    }) : helper)) + "</div><div class=\"lyrics\">" + alias4((helper = (helper = lookupProperty(helpers, "lyrics") || (depth0 != null ? lookupProperty(depth0, "lyrics") : depth0)) != null ? helper : alias2, (typeof helper === 'undefined' ? 'undefined' : _typeof(helper)) === alias3 ? helper.call(alias1, {
      "name": "lyrics",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 19,
          "column": 93
        },
        "end": {
          "line": 19,
          "column": 103
        }
      }
    }) : helper)) + "</div></div>";
  },
  "12": function _(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        alias1 = depth0 != null ? depth0 : container.nullContext || {},
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return (stack1 = lookupProperty(helpers, "if").call(alias1, (lookupProperty(helpers, "isComment") || depth0 && lookupProperty(depth0, "isComment") || container.hooks.helperMissing).call(alias1, blockParams[1][0], {
      "name": "isComment",
      "hash": {},
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 23,
          "column": 25
        },
        "end": {
          "line": 23,
          "column": 41
        }
      }
    }), {
      "name": "if",
      "hash": {},
      "fn": container.program(13, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 23,
          "column": 18
        },
        "end": {
          "line": 25,
          "column": 27
        }
      }
    })) != null ? stack1 : "";
  },
  "13": function _(container, depth0, helpers, partials, data) {
    var helper,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return "<div class=\"comment\">" + container.escapeExpression((helper = (helper = lookupProperty(helpers, "value") || (depth0 != null ? lookupProperty(depth0, "value") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
      "name": "value",
      "hash": {},
      "data": data,
      "loc": {
        "start": {
          "line": 24,
          "column": 41
        },
        "end": {
          "line": 24,
          "column": 50
        }
      }
    }) : helper)) + "</div>";
  },
  "compiler": [8, ">= 4.3.0"],
  "main": function main(container, depth0, helpers, partials, data, blockParams) {
    var stack1,
        lookupProperty = container.lookupProperty || function (parent, propertyName) {
      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
        return parent[propertyName];
      }

      return undefined;
    };

    return (stack1 = lookupProperty(helpers, "with").call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? lookupProperty(depth0, "song") : depth0, {
      "name": "with",
      "hash": {},
      "fn": container.program(1, data, 0, blockParams),
      "inverse": container.noop,
      "data": data,
      "blockParams": blockParams,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 34,
          "column": 11
        }
      }
    })) != null ? stack1 : "";
  },
  "useData": true,
  "useBlockParams": true
});

/**
 * Formats a song into HTML. It uses DIVs to align lyrics with chords, which makes it useful for responsive web pages.
 */

var HtmlDivFormatter = function (_HtmlFormatter) {
  _inherits(HtmlDivFormatter, _HtmlFormatter);

  function HtmlDivFormatter() {
    _classCallCheck(this, HtmlDivFormatter);

    return _possibleConstructorReturn(this, (HtmlDivFormatter.__proto__ || Object.getPrototypeOf(HtmlDivFormatter)).apply(this, arguments));
  }

  _createClass(HtmlDivFormatter, [{
    key: 'format',

    /**
     * Formats a song into HTML.
     * @param {Song} song The song to be formatted
     * @returns {string} The HTML string
     */
    value: function format(song) {
      return this.formatWithTemplate(song, template);
    }
  }]);

  return HtmlDivFormatter;
}(_html_formatter2.default);

exports.default = HtmlDivFormatter;