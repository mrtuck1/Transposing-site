'use strict';

var _runtime = require('handlebars/runtime');

var _runtime2 = _interopRequireDefault(_runtime);

var _chord_lyrics_pair = require('./chord_sheet/chord_lyrics_pair');

var _chord_lyrics_pair2 = _interopRequireDefault(_chord_lyrics_pair);

var _tag = require('./chord_sheet/tag');

var _tag2 = _interopRequireDefault(_tag);

var _constants = require('./constants');

var _utilities = require('./utilities');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lineHasContents = function lineHasContents(line) {
  return line.items.some(function (item) {
    return item.isRenderable();
  });
};

_runtime2.default.registerHelper('isChordLyricsPair', function (item) {
  return item instanceof _chord_lyrics_pair2.default;
});

_runtime2.default.registerHelper('isTag', function (item) {
  return item instanceof _tag2.default;
});

_runtime2.default.registerHelper('isComment', function (item) {
  return item.name === 'comment';
});

_runtime2.default.registerHelper('shouldRenderLine', function (line, options) {
  if (options.data.root.renderBlankLines) {
    return true;
  }

  return lineHasContents(line);
});

_runtime2.default.registerHelper('hasChordContents', _utilities.hasChordContents);

_runtime2.default.registerHelper('hasTextContents', _utilities.hasTextContents);

_runtime2.default.registerHelper('lineHasContents', lineHasContents);

_runtime2.default.registerHelper('lineClasses', function (line) {
  var classes = ['row'];

  if (!lineHasContents(line)) {
    classes.push('empty-line');
  }

  return classes.join(' ');
});

_runtime2.default.registerHelper('toUpperCase', function (line) {
  return line.toUpperCase();
});

_runtime2.default.registerHelper('paragraphClasses', function (paragraph) {
  var classes = ['paragraph'];

  if (paragraph.type !== _constants.INDETERMINATE && paragraph.type !== _constants.NONE) {
    classes.push(paragraph.type);
  }

  return classes.join(' ');
});